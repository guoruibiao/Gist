package gist

import "testing"

func TestGistManager_CreateGist(t *testing.T) {
	gist := &Gist{
		Public:true,
		Description: "this is the description generated by golang.",
		Files: map[string]GistFile{
			"file1": GistFile{
				Content:"this is the content of file1.",
			},
		},
	}
	gistmanager := NewGistManager()
	success, err := gistmanager.CreateGist(gist)
	if err != nil {
		t.Error(err)
	}
	t.Log(success)
}

func TestGistManager_UpdateGist(t *testing.T) {
	gist := &Gist{
		Id:"d04ff9bb10ae9394758f8ae02c78b010",
		Public:true,
		Description:"描述部分信息",
		Files: map[string]GistFile{
			"file1": GistFile{
				Content:"file1的文件正文部分",
			},
			"file2": GistFile{
				Content:"document content in file2.",
			},
		},
	}
	gistmanager := NewGistManager()
	success, err := gistmanager.UpdateGist(gist)
	if err != nil {
		t.Error(err)
	}
	t.Log(success)
}

func TestGistManager_DeleteGist(t *testing.T) {
	gistmanager := NewGistManager()
	id := "1bd738b1bcb0b1baa2366e3302aa5c5d"
	success, err := gistmanager.DeleteGist(id)
	if err != nil {
		t.Error(err)
	}
	t.Log(success)
}

func TestGistManager_ShowGist(t *testing.T) {
	gistmanager := NewGistManager()
	id := "e021cda97f595181a04151a765084044"
	gist, err := gistmanager.ShowGist(id)
	if err != nil {
		t.Error(err)
	}
	t.Log(gist)
}

func TestGistManager_List(t *testing.T) {
	gistmanager := NewGistManager()
	gists, err := gistmanager.ListGists()
	if err != nil {
		t.Error(err)
	}
	t.Log(gists)
	t.Log(gists[0])
}